"""Add system_state table for persisting application state

Revision ID: add_system_state_table
Revises: 70a3cd875f27
Create Date: 2025-10-20 12:00:00.000000+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'add_system_state_table'
down_revision: Union[str, None] = '70a3cd875f27'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create system_state table
    """
    Create a new `system_state` table to persist application-level state and timestamps.

    This table stores system state entries identified by unique keys, such as
    'price_last_update' for tracking when prices were last successfully updated.
    """
    op.create_table(
        'system_state',
        sa.Column('id', sa.Integer(), nullable=False, autoincrement=True),
        sa.Column('key', sa.String(100), nullable=False, unique=True),
        sa.Column('value', sa.String(500), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.func.now()),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key', name='uq_system_state_key'),
        comment='Stores application-level state such as last update timestamps'
    )

    # Create indexes
    op.create_index('ix_system_state_key', 'system_state', ['key'])
    op.create_index('ix_system_state_updated_at', 'system_state', ['updated_at'])

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop indexes
    op.drop_index('ix_system_state_updated_at', table_name='system_state')
    op.drop_index('ix_system_state_key', table_name='system_state')

    # Drop table
    """
    Reverts the migration by removing the system_state table.
    """
    op.drop_table('system_state')

    # ### end Alembic commands ###
