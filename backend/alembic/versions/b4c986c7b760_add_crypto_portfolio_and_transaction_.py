"""Add crypto portfolio and transaction models

Revision ID: b4c986c7b760
Revises: 962daa5a5477
Create Date: 2025-10-09 14:25:27.039763+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4c986c7b760'
down_revision: Union[str, None] = '962daa5a5477'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create crypto_portfolios table
    """
    Create database schema for cryptocurrency portfolios and transactions.
    
    Creates two tables: `crypto_portfolios` (stores portfolio metadata) and `crypto_transactions` (stores high-precision transaction records). Enforces a one-to-many relationship from `crypto_portfolios.id` to `crypto_transactions.portfolio_id` with ON DELETE CASCADE, adds a unique constraint on `transaction_hash`, and creates non-unique indexes to optimize queries: `ix_crypto_transactions_portfolio_id`, `ix_crypto_transactions_symbol`, `ix_crypto_transactions_timestamp`, `ix_crypto_transactions_portfolio_date`, `ix_crypto_transactions_symbol_date`, and `ix_crypto_transactions_type_date`.
    """
    op.create_table('crypto_portfolios',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False, comment='Portfolio name for identification'),
        sa.Column('description', sa.String(length=500), nullable=True, comment='Optional portfolio description'),
        sa.Column('is_active', sa.Boolean(), nullable=False, comment='Whether the portfolio is active'),
        sa.Column('base_currency', sa.String(length=3), nullable=False, comment='Base currency for the portfolio'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='When the portfolio was created'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='When the portfolio was last updated'),
        sa.PrimaryKeyConstraint('id'),
        comment='Cryptocurrency portfolios for standalone crypto tracking'
    )

    # Create crypto_transactions table
    op.create_table('crypto_transactions',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('portfolio_id', sa.Integer(), nullable=False, comment='Associated portfolio ID'),
        sa.Column('symbol', sa.String(length=20), nullable=False, comment='Crypto symbol (e.g., BTC, ETH, ADA)'),
        sa.Column('transaction_type', sa.String(length=20), nullable=False, comment='Type of transaction'),
        sa.Column('quantity', sa.Numeric(precision=20, scale=8), nullable=False, comment='Quantity of crypto asset (positive for all types)'),
        sa.Column('price_at_execution', sa.Numeric(precision=20, scale=8), nullable=False, comment='Price per unit at time of execution'),
        sa.Column('currency', sa.String(length=3), nullable=False, comment='Currency used for the transaction'),
        sa.Column('total_amount', sa.Numeric(precision=20, scale=2), nullable=False, comment='Total value of transaction (quantity * price)'),
        sa.Column('fee', sa.Numeric(precision=20, scale=8), nullable=False, comment='Transaction fee in crypto asset or base currency'),
        sa.Column('fee_currency', sa.String(length=10), nullable=True, comment='Currency of the fee (if different from main transaction)'),
        sa.Column('timestamp', sa.DateTime(), nullable=False, comment='When the transaction occurred'),
        sa.Column('exchange', sa.String(length=50), nullable=True, comment='Exchange or platform where transaction occurred'),
        sa.Column('transaction_hash', sa.String(length=100), nullable=True, comment='Blockchain transaction hash for on-chain transactions'),
        sa.Column('notes', sa.String(length=1000), nullable=True, comment='Additional notes about the transaction'),
        sa.Column('created_at', sa.DateTime(), nullable=False, comment='When the record was created'),
        sa.Column('updated_at', sa.DateTime(), nullable=False, comment='When the record was last updated'),
        sa.ForeignKeyConstraint(['portfolio_id'], ['crypto_portfolios.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('transaction_hash'),
        comment='Cryptocurrency transactions with high precision for quantities and prices'
    )

    # Create indexes for crypto_transactions
    op.create_index('ix_crypto_transactions_portfolio_id', 'crypto_transactions', ['portfolio_id'], unique=False)
    op.create_index('ix_crypto_transactions_symbol', 'crypto_transactions', ['symbol'], unique=False)
    op.create_index('ix_crypto_transactions_timestamp', 'crypto_transactions', ['timestamp'], unique=False)
    op.create_index('ix_crypto_transactions_portfolio_date', 'crypto_transactions', ['portfolio_id', 'timestamp'], unique=False)
    op.create_index('ix_crypto_transactions_symbol_date', 'crypto_transactions', ['symbol', 'timestamp'], unique=False)
    op.create_index('ix_crypto_transactions_type_date', 'crypto_transactions', ['transaction_type', 'timestamp'], unique=False)


    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop indexes
    """
    Revert the migration by removing crypto_transactions indexes and dropping the crypto_transactions and crypto_portfolios tables.
    
    Drops the following non-unique indexes from the `crypto_transactions` table: `ix_crypto_transactions_transaction_hash`, `ix_crypto_transactions_type_date`, `ix_crypto_transactions_symbol_date`, `ix_crypto_transactions_portfolio_date`, `ix_crypto_transactions_timestamp`, `ix_crypto_transactions_symbol`, and `ix_crypto_transactions_portfolio_id`. Then drops the `crypto_transactions` and `crypto_portfolios` tables.
    """
    op.drop_index('ix_crypto_transactions_transaction_hash', table_name='crypto_transactions')
    op.drop_index('ix_crypto_transactions_type_date', table_name='crypto_transactions')
    op.drop_index('ix_crypto_transactions_symbol_date', table_name='crypto_transactions')
    op.drop_index('ix_crypto_transactions_portfolio_date', table_name='crypto_transactions')
    op.drop_index('ix_crypto_transactions_timestamp', table_name='crypto_transactions')
    op.drop_index('ix_crypto_transactions_symbol', table_name='crypto_transactions')
    op.drop_index('ix_crypto_transactions_portfolio_id', table_name='crypto_transactions')

    # Drop tables
    op.drop_table('crypto_transactions')
    op.drop_table('crypto_portfolios')

    # ### end Alembic commands ###